#!/usr/bin/env sh

COMPONENTS="src/components"
TYPE="ui"
TEMPLATE="template"
FILES="index.tsx components.tsx styles.ts types.ts"

cmd=$1
name=$2
opts=$3

red() {
  printf "\033[0;31m%s\033[0m" "$1"
}
green() {
  printf "\033[0;32m%s\033[0m" "$1"
}
blue() {
  printf "\033[0;34m%s\033[0m" "$1"
}
info() {
  printf "%s %s\n\n" "$(blue "ℹ")" "$1"
  [ "$2" = "--exit" ] && exit 0
}
error() {
  printf "%s %s\n\n" "$(red "✖")" "$1"
  [ "$2" = "--exit" ] && exit 1
}
success() {
  printf "%s %s\n\n" "$(green "✔")" "$1"
  [ "$2" = "--exit" ] && exit 0
}
is_kebab_case() {
  echo "$1" | grep -q "^[a-z-]*$"
}
pascal_case() {
  echo "$1" | tr "-" "\n" | awk '{print toupper(substr($0,1,1)) tolower(substr($0,2))}' | tr -d "\n"
}
camel_case() {
  input=$(pascal_case "$1")
  echo "$(echo "${input:0:1}" | tr '[:upper:]' '[:lower:]')${input:1}"
}

if ! is_kebab_case "$name"; then
  error "Component names must be in kebab-case." --exit
fi

case $cmd in
  add)
    ;;
  *)
    error "Invalid command: $cmd" --exit
    ;;
esac

case $opts in
  --layout|--ui)
    TYPE=$(echo "$opts" | sed "s|--||")
    ;;
  *)
    if [ -n "$opts" ]; then
      error "Invalid options: $opts" --exit
    fi
    ;;
esac

template_dir="$COMPONENTS/$TEMPLATE"
component_dir="$COMPONENTS/$TYPE/$name"
component_upper=$(pascal_case "$name")
component_lower=$(camel_case "$name")
template_upper=$(pascal_case "$TEMPLATE")

if [ -d "$component_dir" ]; then
  error "The $(blue "$component_upper") component already exists." --exit
fi

cp -r "$template_dir" "$component_dir"

for file in $FILES; do
  if [ "$file" = "index.tsx" ]; then
    file_path="$component_dir/index.tsx"
  else
    file_path="$component_dir/$name.$file"
    template_path="$component_dir/$TEMPLATE.$file"
    mv "$template_path" "$file_path"
  fi
  
  sed -i "" "s|$template_upper|$component_upper|g" "$file_path"
  sed -i "" "s|\.\/$TEMPLATE|\.\/$name|g" "$file_path"
  sed -i "" "s|$TEMPLATE|$component_lower|g" "$file_path"
done

{
  echo ""
  echo "export { default as $component_upper } from './$name'"
  echo "export * from './$name'"
} >> "$COMPONENTS/$TYPE/index.ts"
eslint --fix "$COMPONENTS/$TYPE" >/dev/null
success "Component $(blue "$component_upper") created in $(green "$component_dir")." --exit
